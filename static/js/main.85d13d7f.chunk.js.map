{"version":3,"sources":["App.js","Components/Break.js","Components/Controls.js","Components/Session.js","Components/Timer.js","reportWebVitals.js","index.js"],"names":["timer","Break","props","id","onClick","ids","className","bl","Controls","playPause","reset","Session","sl","Timer","label","minLessThanTen","timerMinutes","secLessThanTen","timerSeconds","App","state","timerLabel","breakLength","sessionLength","sessionMinutes","sessionSeconds","countdown","bind","startPauseClick","resetClick","incrementDecrementClick","zeroLogic","min","sec","this","setState","seconds","minutes","audio","document","getElementById","play","playState","clearInterval","undefined","setInterval","e","pause","currentTime","currentSession","currentBreak","target","src","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.85d13d7f.chunk.js","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable no-sequences */\nimport React from 'react';\nimport './App.css';\nimport Break from './Components/Break';\nimport Controls from  './Components/Controls';\nimport Session from './Components/Session';\nimport Timer from './Components/Timer';\n\nlet timer;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timerLabel: \"Session\",\n      breakLength: 5,\n      sessionLength: 25,\n      minLessThanTen: \"\",\n      sessionMinutes: 25,\n      secLessThanTen: \"0\",\n      sessionSeconds: 0,\n      playPause: false\n    };\n\n    this.countdown = this.countdown.bind(this);\n    this.startPauseClick = this.startPauseClick.bind(this);\n    this.resetClick = this.resetClick.bind(this);\n    this.incrementDecrementClick = this.incrementDecrementClick.bind(this);\n    this.zeroLogic = this.zeroLogic.bind(this);\n  }\n  \n  zeroLogic(min, sec=0) {\n    if (sec < 10) {\n      this.setState({secLessThanTen: \"0\"})\n    } else {\n      this.setState({secLessThanTen: \"\"})\n    }\n    if (min !== \"empty\") {\n      if (min < 10) {\n      this.setState({minLessThanTen: \"0\"})\n    } else {\n      this.setState({minLessThanTen: \"\"})\n    }\n    }\n  }\n\n  countdown() {\n    const seconds = this.state.sessionSeconds;\n    const minutes = this.state.sessionMinutes;\n    const label = this.state.timerLabel;\n    const audio = document.getElementById(\"beep\");\n    \n    if (minutes == 0 && seconds == 0 && label === \"Session\") {\n      const breakLength = this.state.breakLength;\n      this.setState({\n        sessionMinutes: breakLength,\n        sessionSeconds: 0,\n        timerLabel: \"Break\"\n      })\n      this.zeroLogic(breakLength);\n      audio.play()\n    } else if (minutes == 0 && seconds == 0 && label === \"Break\") {\n      const sessionLength = this.state.sessionLength;\n      this.setState({\n        sessionMinutes: sessionLength,\n        sessionSeconds: 0,\n        timerLabel: \"Session\"\n      })\n      this.zeroLogic(sessionLength);\n      audio.play()\n    } else {\n      if (seconds - 1 < 0) {\n      this.setState({\n        sessionMinutes: minutes - 1,\n        sessionSeconds: 59\n      });\n      this.zeroLogic(minutes - 1, 59);\n    } else {\n      this.setState({ sessionSeconds: seconds - 1 });\n      this.zeroLogic(\"empty\", seconds - 1);\n    }\n    }\n  }\n\n  startPauseClick() {\n    const playState = this.state.playPause;\n    this.setState({ playPause: !playState });\n    if (!playState) {\n      timer = setInterval(this.countdown, 1000);\n    } else {\n      clearInterval(timer);\n      timer = undefined;\n    }\n  }\n\n  resetClick(e) {\n    const playState = this.state.playPause;\n    const audio = document.getElementById(\"beep\");\n    this.setState({ playPause: !playState });\n    clearInterval(timer);\n    timer = undefined;\n    this.setState({\n      timerLabel: \"Session\",\n      breakLength: 5,\n      sessionLength: 25,\n      minLessThanTen: \"\",\n      sessionMinutes: 25,\n      secLessThanTen: \"0\",\n      sessionSeconds: 0,\n      playPause: false\n    });\n    this.zeroLogic(25);\n    audio.pause();\n    audio.currentTime = 0;\n  }\n\n  incrementDecrementClick(e) {\n    // If timer is paused, increment or decrement session or break based on id\n    if (this.state.playPause === false) {\n      const currentSession = this.state.sessionLength;\n      const currentBreak = this.state.breakLength;\n      const id = e.target.id;\n      const label = this.state.timerLabel;\n      \n      switch (id) {\n        case \"session-increment\":\n          if (currentSession + 1 < 61) {\n            this.setState({  sessionLength: currentSession + 1 })\n            if (label === \"Session\") this.setState({sessionMinutes: currentSession + 1, sessionSeconds: 0}), this.zeroLogic(currentSession + 1);\n          }\n          break;\n        case \"session-decrement\":\n          if (currentSession - 1 > 0) {\n            this.setState({ sessionLength: currentSession - 1 })\n            if (label === \"Session\") this.setState({sessionMinutes: currentSession - 1, sessionSeconds: 0}), this.zeroLogic(currentSession - 1);\n          }\n          break;\n        case \"break-increment\":\n          if (currentBreak + 1 < 61) {\n            this.setState({ breakLength: currentBreak + 1 })\n            if (label === \"Break\") this.setState({sessionMinutes: currentBreak + 1, sessionSeconds: 0}), this.zeroLogic(currentBreak + 1);\n          }\n          break;\n        case \"break-decrement\":\n          if (currentBreak - 1 > 0) {\n            this.setState({ breakLength: currentBreak - 1 })\n            if (label === \"Break\") this.setState({sessionMinutes: currentBreak - 1, sessionSeconds: 0}), this.zeroLogic(currentBreak - 1);\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Break bl={this.state.breakLength} ids={this.incrementDecrementClick} />\n        <Session sl={this.state.sessionLength} ids={this.incrementDecrementClick} />\n        <Timer\n          minLessThanTen={this.state.minLessThanTen}\n          secLessThanTen={this.state.secLessThanTen}\n          label={this.state.timerLabel}\n          timerMinutes={this.state.sessionMinutes}\n          timerSeconds={this.state.sessionSeconds}\n        />\n        <Controls playPause={this.startPauseClick} reset={this.resetClick} />\n        <audio id=\"beep\" src=\"https://www.myinstants.com/media/sounds/victory-fanfare-ffvii.mp3\"></audio>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst Break = (props) => {\n    return (\n      <div id=\"break\">\n        <p id=\"break-label\">Break Length</p>\n        <button onClick={props.ids} id=\"break-increment\">\n          <i className=\"fas fa-chevron-up\"/>\n        </button>\n        <p id=\"break-length\">{props.bl}</p>\n        <button onClick={props.ids} id=\"break-decrement\">\n          <i className=\"fas fa-chevron-down\"/>\n        </button>\n      </div>\n    );\n  };\n\n  export default Break;","import React from 'react';\n\nconst Controls = (props) => {\n    return (\n      <div>\n        <button onClick={props.playPause} id=\"start_stop\">\n          <i className=\"fas fa-play\"/>\n          <i className=\"fas fa-pause\"/>\n        </button>\n        <button onClick={props.reset} id=\"reset\">\n          <i className=\"fas fa-power-off\"/>\n        </button>\n      </div>\n    );\n  };\n\n  export default Controls;","import React from 'react';\n\nconst Session = (props) => {\n    return (\n      <div id=\"session\">\n        <p id=\"session-label\">Session Length</p>\n        <button onClick={props.ids} id=\"session-increment\">\n          <i className=\"fas fa-chevron-up\"/>\n        </button>\n        <p id=\"session-length\">{props.sl}</p>\n        <button onClick={props.ids} id=\"session-decrement\">\n          <i className=\"fas fa-chevron-down\"/>\n        </button>\n      </div>\n    );\n  };\n\n  export default Session;","import React from 'react';\n\nconst Timer = (props) => {\n    return (\n      <div id=\"container\">\n        <p id=\"timer-label\">{props.label}</p>\n        <p id=\"time-left\">{props.minLessThanTen}{props.timerMinutes}:{props.secLessThanTen}{props.timerSeconds}</p>\n      </div>\n    );\n  };\n\n  export default Timer;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}